import React, { useState } from "react";

const Header = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [activeDropdown, setActiveDropdown] = useState(null);

  const handleDropdown = (index) => {
    setActiveDropdown(activeDropdown === index ? null : index);
  };

  const menuItems = [
    { name: "TRANG CH·ª¶", subItems: [] },
    { 
      name: "TH·∫æ GI·ªöI", 
      subItems: ["Ch√¢u √Å", "Ch√¢u √Çu", "Ch√¢u M·ªπ", "Ch√¢u Phi", "Qu·ªëc t·∫ø"] 
    },
    { 
      name: "KINH DOANH", 
      subItems: ["T√†i ch√≠nh", "B·∫•t ƒë·ªông s·∫£n", "Ch·ª©ng kho√°n", "Doanh nghi·ªáp"] 
    },
    { 
      name: "TH·ªÇ THAO", 
      subItems: ["B√≥ng ƒë√°", "Tennis", "C√°c m√¥n kh√°c"] 
    },
    { 
      name: "GI·∫¢I TR√ç", 
      subItems: ["Sao Vi·ªát", "ƒêi·ªán ·∫£nh", "√Çm nh·∫°c", "Th·ªùi trang"] 
    },
  ];

  return (
    <header className="shadow-md">
      {/* Breaking news bar */}
      <div className="bg-red-600 text-white px-4 py-2 flex items-center">
        <span className="font-bold mr-3">N√ìNG:</span>
        <div className="overflow-hidden relative flex-1">
          <div className="whitespace-nowrap animate-marquee">
            Tin m·ªõi nh·∫•t: Gi√° v√†ng ti·∫øp t·ª•c tƒÉng m·∫°nh ‚Ä¢ COVID-19: C·∫≠p nh·∫≠t t√¨nh h√¨nh d·ªãch b·ªánh ‚Ä¢ Th·ªùi ti·∫øt: D·ª± b√°o m∆∞a l·ªõn ·ªü mi·ªÅn Trung
          </div>
        </div>
      </div>

      {/* Top bar */}
      <div className="bg-gray-100 py-1 px-4">
        <div className="max-w-7xl mx-auto flex justify-between items-center text-sm">
          <div className="flex gap-4">
            <span>Th·ª© Hai, 31/03/2025</span>
            <a href="#" className="text-gray-800 hover:text-red-600">M·ªõi nh·∫•t</a>
            <a href="#" className="text-gray-800 hover:text-red-600">Tin n√≥ng</a>
          </div>
          <div className="flex gap-4 items-center">
            <a href="#" className="text-gray-800 hover:text-red-600 flex items-center">
              <span className="inline-block w-4 h-4 mr-1 bg-contain bg-bell"></span>
              Th√¥ng b√°o
            </a>
            <a href="#" className="text-gray-800 hover:text-red-600 flex items-center">
              <span className="inline-block w-4 h-4 mr-1 bg-contain bg-bookmark"></span>
              ƒê√£ l∆∞u
            </a>
          </div>
        </div>
      </div>

      {/* Hero banner */}
      <div className="w-full relative">
        <img
          src="https://media.vneconomy.vn/w800/images/upload/2021/06/19/anh-chup-man-hinh-2021-06-19-luc-06-02-48.png"
          alt="Banner Tin T·ª©c"
          className="w-full h-64 object-cover object-center"
        />
        <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-4">
          <div className="max-w-7xl mx-auto">
            <h2 className="text-white text-2xl font-bold m-0">C·∫≠p nh·∫≠t tin t·ª©c m·ªõi nh·∫•t, nhanh nh·∫•t, ch√≠nh x√°c nh·∫•t</h2>
          </div>
        </div>
      </div>

      {/* Main navbar */}
      <nav className="bg-white border-b border-gray-200 sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 flex justify-between items-center h-16">
          {/* Logo */}
          <div className="flex-shrink-0">
            <img
              src="image.png"
              alt="Logo"
              className="h-14"
            />
          </div>

          {/* Desktop menu */}
          <div className="hidden md:flex items-center">
            {menuItems.map((item, index) => (
              <div key={index} className="relative">
                <button
                  className="text-gray-800 mx-3 font-bold px-3 py-2 flex items-center hover:text-red-600 bg-transparent border-none cursor-pointer text-sm"
                  onClick={() => handleDropdown(index)}
                >
                  {item.name}
                  {item.subItems.length > 0 && (
                    <span className="text-xs ml-1">‚ñº</span>
                  )}
                </button>
                
                {item.subItems.length > 0 && activeDropdown === index && (
                  <div className="absolute left-0 mt-1 w-48 bg-white shadow-lg rounded-md py-1 z-10">
                    {item.subItems.map((subItem, subIndex) => (
                      <a
                        key={subIndex}
                        href="#"
                        className="block px-4 py-2 text-sm text-gray-600 hover:bg-gray-50 hover:text-red-600"
                      >
                        {subItem}
                      </a>
                    ))}
                  </div>
                )}
              </div>
            ))}
          </div>

          {/* Search and login */}
          <div className="flex items-center">
            <div className="hidden md:flex items-center mr-2 border border-gray-200 rounded-md overflow-hidden">
              <input
                type="text"
                placeholder="T√¨m ki·∫øm..."
                className="px-3 py-1 w-48 border-none focus:outline-none"
              />
              <button className="p-2 bg-gray-50 border-none cursor-pointer">üîç</button>
            </div>
            
            <button className="px-4 py-2 bg-green-600 text-white border-none rounded-md cursor-pointer font-bold flex items-center hover:bg-green-700">
              <span className="inline-block w-4 h-4 mr-1 bg-contain bg-user"></span>
              ƒêƒÉng nh·∫≠p
            </button>
            
            <button 
              className="md:hidden ml-2 p-1 bg-transparent border-none text-2xl cursor-pointer"
              onClick={() => setIsMenuOpen(!isMenuOpen)}
            >
              {isMenuOpen ? "‚úï" : "‚ò∞"}
            </button>
          </div>
        </div>

        {/* Mobile menu */}
        {isMenuOpen && (
          <div className="md:hidden p-4 border-t border-gray-200">
            {menuItems.map((item, index) => (
              <div key={index}>
                <button
                  className="w-full text-left py-3 px-3 mb-1 bg-gray-50 border-none rounded-md flex justify-between items-center font-medium cursor-pointer"
                  onClick={() => handleDropdown(index)}
                >
                  {item.name}
                  {item.subItems.length > 0 && (
                    <span className={`text-xs ${activeDropdown === index ? 'rotate-180' : ''}`}>‚ñº</span>
                  )}
                </button>
                
                {item.subItems.length > 0 && activeDropdown === index && (
                  <div className="pl-6 mb-2">
                    {item.subItems.map((subItem, subIndex) => (
                      <a
                        key={subIndex}
                        href="#"
                        className="block py-2 text-gray-600"
                      >
                        {subItem}
                      </a>
                    ))}
                  </div>
                )}
              </div>
            ))}
            
            <div className="flex items-center border border-gray-200 rounded-md overflow-hidden mt-4">
              <input
                type="text"
                placeholder="T√¨m ki·∫øm..."
                className="px-3 py-2 w-full border-none focus:outline-none"
              />
              <button className="p-2 bg-gray-50 border-none cursor-pointer">üîç</button>
            </div>
          </div>
        )}
      </nav>
    </header>
  );
};

export default Header;